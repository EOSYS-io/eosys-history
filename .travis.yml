branches:
  only:
  - master
sudo: required
git:
  submodules: false
jobs:
  include:
  - stage: Test
    language: ruby
    cache:
      bundler: true
      directories:
      - "/home/travis/.rvm/"
    env:
    - RACK_ENV=test
    script:
    - bundle exec rspec
  - stage: Build and push a docker image, deploy to ecs.
    if: type != pull_request
    language: python
    python:
      - "3.6"
    cache: pip
    services:
      - docker
    install:
      # install AWS SDK
      - pip install awscli
      - export PATH=$PATH:$HOME/.local/bin
      # install necessary dependency for ecs-deploy
      - sudo apt-get update
      - sudo apt-get install jq -y
      # install ecs-deploy
      - curl https://raw.githubusercontent.com/silinternational/ecs-deploy/master/ecs-deploy | sudo tee -a /usr/bin/ecs-deploy
      - sudo chmod +x /usr/bin/ecs-deploy
    before_script:
      - export DOCKER_TAG=$TRAVIS_COMMIT
      # Dockerhub login
      - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    script:
      # Build a docker image and push
      - export DOCKER_IMAGE=$DOCKER_HUB_REPO:$DOCKER_TAG
      - docker build -t $DOCKER_IMAGE --build-arg MONGODB_USER=$MONGODB_USER --build-arg MONGODB_PASSWORD=$MONGODB_PASSWORD --build-arg MONGODB_HOST=$MONGODB_HOST .
      - docker push $DOCKER_IMAGE
      # Deploy to ECS.
      - ecs-deploy -c $AWS_CLUSTER_NAME -n $AWS_SERVICE_NAME -i $DOCKER_IMAGE -t 900

notifications:
  email: false
  slack:
    secure: JUGzESC8DCIV5CjmRNUV2p9uXxUctY2xsYZ61BmBG7Zx1Efq9KpDwnv7CM2f9JrM/g1v2ZvXXbiFPLMsXCQsiM+qQF25vnJ/Flxfbs9StKXfqmV8iWrKZ3E5zHas2k8rMwnauwbvLbJMxziYjoeQElIp7HQpsgbRbaBMUf99vx9uZ29DyrX3yxjHfnyLGQvgJNUaneRyK1KHHMI2aTtZPWqN3QSPbG6B7nicV0B2+OsgV8xae1Gz/y25uwBavKQDqp0zi23SeB7dn7wAl5m95pzAAeCsUu6GebiMFB9hy4mVSa6l9yKAUfYLpW5yI3QQM02j7mQx1tVQM4VgVZviS3LdvdJXCxWKCj+Q1sT+NnzSWE6fGKK7uV6yjA00oSCArT4J50SnPI+EACp0LvG/e4jU+R9M7UJkhFCE5ZlpNiBqW+E+LJQNNgZ59BB/QSiLXbZj0Dpbw8pGjpsVd0cyC7I3kamoYnZLud8tkUuwpbgPnvvHjSDXlhXLDj1TTOkV1uPRLjbHAq9qbK3K4NsIZdXRnhEa9qH96WvQ5OK3hKGWvZQTK7b/5hw91lHq+vXEylANe60ItxKpB64gbJdcqeq9EmhV9y2NJVqqrE5IGkpMnWc6KM5R3XW5MmNkU53irnofgVrjjDjxCfFxjqPGg5AbcU4ooaTfiIVjF5Z6iXk=
